{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","useState","color","backgroundColor","myStyle","setMyStyle","btnTxt","setBtnTxt","className","style","id","type","onClick","border","class","Navbar","props","mode","href","title","to","aboutText","toggleMode","role","htmlFor","placeholder","TextForm","text","setText","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","Alert","alert","App","setMode","setAlert","body","msg","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a9c54303.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nexport default function About() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: 'black',\r\n    backgroundColor: 'white'\r\n})\r\n\r\n  const [btnTxt, setBtnTxt] = useState(\"Enable Dark Mode\")\r\n\r\n  const toggleStyle = ()=>{\r\n    if(myStyle.color === 'black'){\r\n      setMyStyle({\r\n        color: 'white',\r\n        backgroundColor: 'black',\r\n        border: '1px solid white'\r\n      })\r\n      setBtnTxt(\"Enable Light Mode\");\r\n    }\r\n    else{\r\n      setMyStyle({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n      })\r\n      setBtnTxt(\"Enable Dark Mode\");\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container my-5\" style={myStyle}>\r\n      <h1 className=\"my=3d\">About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              Accordion Item #1\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the first item's accordion body.</strong> It is\r\n              shown by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #2\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the second item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              Accordion Item #3\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              <strong>This is the third item's accordion body.</strong> It is\r\n              hidden by default, until the collapse plugin adds the appropriate\r\n              classes that we use to style each element. These classes control\r\n              the overall appearance, as well as the showing and hiding via CSS\r\n              transitions. You can modify any of this with custom CSS or\r\n              overriding our default variables. It's also worth noting that just\r\n              about any HTML can go within the <code>.accordion-body</code>,\r\n              though the transition does limit overflow.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-2\">\r\n      <button type=\"button\" onClick={toggleStyle} class=\"btn btn-primary\">{btnTxt}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div className= {`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-4`} onClick={props.toggleMode}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n             </div>\r\n            <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"set Title\",\r\n    aboutText: \"set About\"\r\n}","import React,{useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const[text,setText] = useState('')\r\n  const handleOnChange = (event)=>{\r\n    console.log(\"clicked on Onchange \")\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const handleUpClick = ()=>{\r\n    console.log(\"Clicked on upper case button\")\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n  }\r\n  const handleLoClick = ()=>{\r\n    console.log(\"Clicked on lower case button\")\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n  }\r\n  const handleClClick = ()=>{\r\n    console.log(\"cleard\")\r\n    let newText = '';\r\n    setText(newText)\r\n  }\r\n  const handleCopy = ()=>{\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value)\r\n  }\r\n\r\n  const handleExtraSpaces = ()=>{\r\n    let newText = text.split(/[ ]+/)\r\n    setText(newText.join(\" \"));\r\n  }\r\n\r\n  return (\r\n\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}>\r\n       <h1>{props.heading}</h1>\r\n        \r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'#042743',color:props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClClick}>Clear</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        \r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\r\n      <h1>Your Text Summary</h1>\r\n      <p>{text.split(\" \").length} words and {text.length} characters here</p>\r\n      <p>{0.008*text.split(\" \").length} Minutes read</p>\r\n      <h2>Preview</h2>\r\n      <p> {text.length>0?text:\"Enter something in box so that you can preview it here!!!\"} </p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div>\r\n             <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n              {props.alert}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n// props","\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='dark'){\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark mode has enabled\",\"success\");\n      document.title = \"textUtils-Light Mode\"\n      // setTimeout(() => {\n      //   document.title = \"Text utils is amazing\"\n      // }, 2000);\n      \n      // setTimeout(() => {\n      //   document.title = \"Install textUtils Now\"\n      // }, 1500);\n      \n    }\n    else{\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      document.title = \"textUtils - Dark Mode\"\n    }\n  }\n  return (\n    <>\n    <Router>\n      <Navbar title =\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert=\"This is alert\"/>\n      \n      <div className = \"container my-3\">\n        \n      <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n          <Route exact path=\"/\" element={<TextForm heading=\"Enter the text to analyze\" mode = {mode}/>}/>\n          \n      </Routes>\n     \n            \n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}